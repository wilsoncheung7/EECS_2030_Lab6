
/**
 * A weather statistics app calculates the 
 * minimum, maximum, and average temperature 
 * read so far from its subscribed weather station, if any.
 */
public class StatisticsApp extends WeatherObserver {
	private WeatherStation ws;
	private boolean b;
	private double max;
	private double min;
	private double acc;
	private double sum;
	private double count;
	/**
	 * Update the reading of this weather observer.
	 * Update the current temperature and the 
	 * maximum, minimum, and average accordingly.
	 */
	public void update() {
		/* Your Task */
		acc=ws.getTemperature();
		if(!b) {
			
			max=acc;
			min=acc;
			sum=acc;
			count=1;
			b=true;
		}
		else {
			
			if(min>acc){
				min=acc;
			}
			if(max<acc) {
				max=acc;
			}
			sum+=acc;
			count++;
		}
	}

	/* See the method description in the parent class */
	public WeatherStation getWeatherStation() {
		/* Your Task */
		return ws;
	}

	/* See the method description in the parent class */
	public void setWeatherStation(WeatherStation ws) {
		/* Your Task */ 
		this.ws=ws;
	}

	/**
	 * Get the minimum temperature based on the readings so far.
	 * @return minimum temperature based on the readings so far
	 */
	public double getMinTemperature() {
		/* Your Task */
		return this.min;
	}

	/**
	 * Get the maximum temperature based on the readings so far.
	 * @return maximum temperature based on the readings so far
	 */
	public double getMaxTemperature() {
		/* Your Task */
		return this.max;
	}

	/**
	 * Get the average temperature based on the readings so far.
	 * @return average temperature based on the readings so far
	 */
	public double getAverageTemperature() {
		/* Your Task */
		return sum/count;
	}
}

